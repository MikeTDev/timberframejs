import {nodeResolve} from '@rollup/plugin-node-resolve';
import ts from 'rollup-plugin-ts';
export default [
  {
    input: './src/index.ts',
    output: {
      file: './dist/browser/js/index.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  },
  {
    input: './example/basic/app.ts',
    output: {
      file: './example/basic/dist/app.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      nodeResolve(),
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  },
   {
    input: './example/dialog/app.ts',
    output: {
      file: './example/dialog/dist/app.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      nodeResolve(),
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  },
  {
    input: './example/dialog/app2.ts',
    output: {
      file: './example/dialog/dist/app2.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      nodeResolve(),
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  }, 
   {
    input: './example/app.ts',
    output: {
      file: './example/dist/js/app.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      nodeResolve(),
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  },
  {
    input: './example/customFetcher/app.ts',
    output: {
      file: './example/customFetcher/dist/js/app.js',
      format: 'es',
      sourcemap: false
    },
    plugins: [
      nodeResolve(),
      ts({
        tsconfig: './tsconfig.browser.json'
      })
    ]
  },
  {
    input: './test/index.spec.ts',
    output: {
      file: './test/dist/browser/test/index.js',
      format: 'es',
      sourcemap: true
    },
    plugins: [
       nodeResolve(),
      ts({
        tsconfig: './tsconfig.karma.json'
      })
    ]
  }
];
